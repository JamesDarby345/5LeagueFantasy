[
  {
    "line": 1,
    "elements": [
      {
        "start_timestamp": "2024-03-23T17:38:06.156Z",
        "line": 3,
        "name": "Successfully add a forward to an existing user team (Normal Flow)",
        "description": "",
        "id": "add-player-to-user-team;successfully-add-a-forward-to-an-existing-user-team-(normal-flow)",
        "after": [
          {
            "result": {
              "duration": 21665000,
              "status": "passed"
            },
            "match": {
              "location": "com.example.LeagueFantasy.step_definitions.CreateLeagueStepDefinitions.tearDown()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 331879000,
              "status": "passed"
            },
            "line": 4,
            "name": "I have an existing user team with team name \"MyAwesomeTeam\" with 1 forward named \"Joe Fresh\"",
            "match": {
              "arguments": [
                {
                  "val": "\"MyAwesomeTeam\"",
                  "offset": 44
                },
                {
                  "val": "\"Joe Fresh\"",
                  "offset": 81
                }
              ],
              "location": "com.example.LeagueFantasy.step_definitions.AddPlayerToTeamStepDefinitions.i_have_an_existing_user_team_with_team_name_with_1_forward(java.lang.String,java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 47119000,
              "status": "passed"
            },
            "line": 5,
            "name": "I add a forward named \"Eden Hazard\" to the user team",
            "match": {
              "arguments": [
                {
                  "val": "\"Eden Hazard\"",
                  "offset": 22
                }
              ],
              "location": "com.example.LeagueFantasy.step_definitions.AddPlayerToTeamStepDefinitions.when_i_add_a_forward_named_to_the_user_team(java.lang.String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 25701000,
              "status": "passed"
            },
            "line": 6,
            "name": "the user team should have 2 players total",
            "match": {
              "location": "com.example.LeagueFantasy.step_definitions.AddPlayerToTeamStepDefinitions.the_user_team_should_have_2_players_total()"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "start_timestamp": "2024-03-23T17:38:06.693Z",
        "line": 8,
        "name": "Successfully add a goalkeeper to an existing user team (Normal Flow)",
        "description": "",
        "id": "add-player-to-user-team;successfully-add-a-goalkeeper-to-an-existing-user-team-(normal-flow)",
        "after": [
          {
            "result": {
              "duration": 10500000,
              "status": "passed"
            },
            "match": {
              "location": "com.example.LeagueFantasy.step_definitions.CreateLeagueStepDefinitions.tearDown()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 30943000,
              "status": "passed"
            },
            "line": 9,
            "name": "I have an existing user team with team name \"MyAwesomeTeam\" with 1 forward named \"Joe Fresh\"",
            "match": {
              "arguments": [
                {
                  "val": "\"MyAwesomeTeam\"",
                  "offset": 44
                },
                {
                  "val": "\"Joe Fresh\"",
                  "offset": 81
                }
              ],
              "location": "com.example.LeagueFantasy.step_definitions.AddPlayerToTeamStepDefinitions.i_have_an_existing_user_team_with_team_name_with_1_forward(java.lang.String,java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 18223000,
              "status": "passed"
            },
            "line": 10,
            "name": "I add a goalkeeper named \"Carey Price\" to the user team",
            "match": {
              "arguments": [
                {
                  "val": "\"Carey Price\"",
                  "offset": 25
                }
              ],
              "location": "com.example.LeagueFantasy.step_definitions.AddPlayerToTeamStepDefinitions.when_i_add_a_goalkeeper_named_to_the_user_team(java.lang.String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 20387000,
              "status": "passed"
            },
            "line": 11,
            "name": "the user team should have 2 players total, with one goalkeeper and one forward",
            "match": {
              "location": "com.example.LeagueFantasy.step_definitions.AddPlayerToTeamStepDefinitions.the_user_team_should_have_2_players_total_with_one_goalie_and_one_forward()"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "start_timestamp": "2024-03-23T17:38:06.809Z",
        "line": 13,
        "name": "Attempt to add a goalkeeper to a team already with one (Alternate Flow)",
        "description": "",
        "id": "add-player-to-user-team;attempt-to-add-a-goalkeeper-to-a-team-already-with-one-(alternate-flow)",
        "after": [
          {
            "result": {
              "duration": 9122000,
              "status": "passed"
            },
            "match": {
              "location": "com.example.LeagueFantasy.step_definitions.CreateLeagueStepDefinitions.tearDown()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 38821000,
              "status": "passed"
            },
            "line": 14,
            "name": "I have an existing user team with team name \"MyAwesomeTeam\" with 1 goalkeeper named \"Lebron James\"",
            "match": {
              "arguments": [
                {
                  "val": "\"MyAwesomeTeam\"",
                  "offset": 44
                },
                {
                  "val": "\"Lebron James\"",
                  "offset": 84
                }
              ],
              "location": "com.example.LeagueFantasy.step_definitions.AddPlayerToTeamStepDefinitions.i_have_an_existing_user_team_with_team_name_with_1_goalkeeper(java.lang.String,java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 12982000,
              "status": "passed"
            },
            "line": 15,
            "name": "I add another goalkeeper to the user team",
            "match": {
              "location": "com.example.LeagueFantasy.step_definitions.AddPlayerToTeamStepDefinitions.when_i_add_another_goalkeeper_to_the_user_team()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 15598000,
              "status": "passed"
            },
            "line": 16,
            "name": "the attempt should not be successful and theres should only be 1 goalkeeper on the team",
            "match": {
              "location": "com.example.LeagueFantasy.step_definitions.AddPlayerToTeamStepDefinitions.then_the_attempt_should_not_be_successful_and_theres_should_only_be_1_goalkeeper_on_the_team()"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "start_timestamp": "2024-03-23T17:38:06.922Z",
        "line": 18,
        "name": "Attempt to add a forward to a team already with five  (Alternate Flow)",
        "description": "",
        "id": "add-player-to-user-team;attempt-to-add-a-forward-to-a-team-already-with-five--(alternate-flow)",
        "after": [
          {
            "result": {
              "duration": 8823000,
              "status": "passed"
            },
            "match": {
              "location": "com.example.LeagueFantasy.step_definitions.CreateLeagueStepDefinitions.tearDown()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 89408000,
              "status": "passed"
            },
            "line": 19,
            "name": "I have an existing user team with team name \"MyAwesomeTeam\" with 5 forwards",
            "match": {
              "arguments": [
                {
                  "val": "\"MyAwesomeTeam\"",
                  "offset": 44
                }
              ],
              "location": "com.example.LeagueFantasy.step_definitions.AddPlayerToTeamStepDefinitions.i_have_an_existing_user_team_with_team_name_with_5_forwards(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 8451000,
              "status": "passed"
            },
            "line": 20,
            "name": "I add another forward to the user team",
            "match": {
              "location": "com.example.LeagueFantasy.step_definitions.AddPlayerToTeamStepDefinitions.when_i_add_another_forward_to_the_user_team()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 15185000,
              "status": "passed"
            },
            "line": 21,
            "name": "the attempt should not be successful and there should still be 5 forwards on the team",
            "match": {
              "location": "com.example.LeagueFantasy.step_definitions.AddPlayerToTeamStepDefinitions.then_the_attempt_should_not_be_successful_and_theres_should_only_be_5_forwards_on_the_team()"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "start_timestamp": "2024-03-23T17:38:07.075Z",
        "line": 23,
        "name": "Forward already exists on team (Error Flow)",
        "description": "",
        "id": "add-player-to-user-team;forward-already-exists-on-team-(error-flow)",
        "after": [
          {
            "result": {
              "duration": 10732000,
              "status": "passed"
            },
            "match": {
              "location": "com.example.LeagueFantasy.step_definitions.CreateLeagueStepDefinitions.tearDown()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 18322000,
              "status": "passed"
            },
            "line": 24,
            "name": "I have an existing user team with team name \"MyAwesomeTeam\" with 1 forward named \"Sidney Crosby\"",
            "match": {
              "arguments": [
                {
                  "val": "\"MyAwesomeTeam\"",
                  "offset": 44
                },
                {
                  "val": "\"Sidney Crosby\"",
                  "offset": 81
                }
              ],
              "location": "com.example.LeagueFantasy.step_definitions.AddPlayerToTeamStepDefinitions.i_have_an_existing_user_team_with_team_name_with_1_forward(java.lang.String,java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 10679000,
              "status": "passed"
            },
            "line": 25,
            "name": "I add a forward named \"Sidney Crosby\" to the user team already with that player",
            "match": {
              "arguments": [
                {
                  "val": "\"Sidney Crosby\"",
                  "offset": 22
                }
              ],
              "location": "com.example.LeagueFantasy.step_definitions.AddPlayerToTeamStepDefinitions.when_i_add_a_forward_named_to_the_user_team_already_with_that_player(java.lang.String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 7696000,
              "status": "passed"
            },
            "line": 26,
            "name": "the attempt should not be successful and there should still be 1 forward on the team",
            "match": {
              "location": "com.example.LeagueFantasy.step_definitions.AddPlayerToTeamStepDefinitions.then_the_attempt_should_not_be_successful_and_theres_should_only_be_1_forward_on_the_team()"
            },
            "keyword": "Then "
          }
        ]
      }
    ],
    "name": "Add Player to User Team",
    "description": "",
    "id": "add-player-to-user-team",
    "keyword": "Feature",
    "uri": "file:src/test/resources/add_player_to_team.feature",
    "tags": []
  },
  {
    "line": 1,
    "elements": [
      {
        "start_timestamp": "2024-03-23T17:38:07.149Z",
        "line": 3,
        "name": "Successfully create a new account (Normal Flow)",
        "description": "",
        "id": "create-a-new-user-account;successfully-create-a-new-account-(normal-flow)",
        "after": [
          {
            "result": {
              "duration": 7556000,
              "status": "passed"
            },
            "match": {
              "location": "com.example.LeagueFantasy.step_definitions.CreateLeagueStepDefinitions.tearDown()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 6831000,
              "status": "passed"
            },
            "line": 4,
            "name": "no user with the username \"cvatos\" exists",
            "match": {
              "arguments": [
                {
                  "val": "\"cvatos\"",
                  "offset": 26
                }
              ],
              "location": "com.example.LeagueFantasy.step_definitions.CreateAccountStepDefinitions.no_user_with_the_username_username_exists(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 250000,
              "status": "passed"
            },
            "line": 5,
            "name": "I enter a valid username \"cvatos\"",
            "match": {
              "arguments": [
                {
                  "val": "\"cvatos\"",
                  "offset": 25
                }
              ],
              "location": "com.example.LeagueFantasy.step_definitions.CreateAccountStepDefinitions.i_enter_a_valid_username_username(java.lang.String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 165000,
              "status": "passed"
            },
            "line": 6,
            "name": "I enter a valid name \"Chris Vatos\"",
            "match": {
              "arguments": [
                {
                  "val": "\"Chris Vatos\"",
                  "offset": 21
                }
              ],
              "location": "com.example.LeagueFantasy.step_definitions.CreateAccountStepDefinitions.i_enter_a_valid_name_name(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 137000,
              "status": "passed"
            },
            "line": 7,
            "name": "I enter a valid email \"test@gmail.com\"",
            "match": {
              "arguments": [
                {
                  "val": "\"test@gmail.com\"",
                  "offset": 22
                }
              ],
              "location": "com.example.LeagueFantasy.step_definitions.CreateAccountStepDefinitions.i_enter_a_valid_email_email(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 154000,
              "status": "passed"
            },
            "line": 8,
            "name": "I enter a valid password \"test1235678\"",
            "match": {
              "arguments": [
                {
                  "val": "\"test1235678\"",
                  "offset": 25
                }
              ],
              "location": "com.example.LeagueFantasy.step_definitions.CreateAccountStepDefinitions.i_enter_a_valid_password_password(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 11080000,
              "status": "passed"
            },
            "line": 9,
            "name": "I click on the create account button",
            "match": {
              "location": "com.example.LeagueFantasy.step_definitions.CreateAccountStepDefinitions.and_i_click_on_the_create_account_button()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 17579000,
              "status": "passed"
            },
            "line": 10,
            "name": "the user with username \"cvatos\" should be created",
            "match": {
              "arguments": [
                {
                  "val": "\"cvatos\"",
                  "offset": 23
                }
              ],
              "location": "com.example.LeagueFantasy.step_definitions.CreateAccountStepDefinitions.the_user_with_username_username_should_be_created(java.lang.String)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "start_timestamp": "2024-03-23T17:38:07.224Z",
        "line": 12,
        "name": "Username already registered to an account (Alternate Flow)",
        "description": "",
        "id": "create-a-new-user-account;username-already-registered-to-an-account-(alternate-flow)",
        "after": [
          {
            "result": {
              "duration": 8587000,
              "status": "passed"
            },
            "match": {
              "location": "com.example.LeagueFantasy.step_definitions.CreateLeagueStepDefinitions.tearDown()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 16881000,
              "status": "passed"
            },
            "line": 13,
            "name": "a user with the username \"abhiprav\" exists",
            "match": {
              "arguments": [
                {
                  "val": "\"abhiprav\"",
                  "offset": 25
                }
              ],
              "location": "com.example.LeagueFantasy.step_definitions.CreateAccountStepDefinitions.a_user_with_the_username_username_exists(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 296000,
              "status": "passed"
            },
            "line": 14,
            "name": "I enter a valid but existing username \"abhiprav\"",
            "match": {
              "arguments": [
                {
                  "val": "\"abhiprav\"",
                  "offset": 38
                }
              ],
              "location": "com.example.LeagueFantasy.step_definitions.CreateAccountStepDefinitions.i_enter_an_existing_username_username(java.lang.String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 281000,
              "status": "passed"
            },
            "line": 15,
            "name": "I enter a valid name \"Abhi Praveen\"",
            "match": {
              "arguments": [
                {
                  "val": "\"Abhi Praveen\"",
                  "offset": 21
                }
              ],
              "location": "com.example.LeagueFantasy.step_definitions.CreateAccountStepDefinitions.i_enter_a_valid_name_name(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 275000,
              "status": "passed"
            },
            "line": 16,
            "name": "I enter a valid email \"newEmail@gmail.com\"",
            "match": {
              "arguments": [
                {
                  "val": "\"newEmail@gmail.com\"",
                  "offset": 22
                }
              ],
              "location": "com.example.LeagueFantasy.step_definitions.CreateAccountStepDefinitions.i_enter_a_valid_email_email(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 205000,
              "status": "passed"
            },
            "line": 17,
            "name": "I enter a valid password \"newPassword\"",
            "match": {
              "arguments": [
                {
                  "val": "\"newPassword\"",
                  "offset": 25
                }
              ],
              "location": "com.example.LeagueFantasy.step_definitions.CreateAccountStepDefinitions.i_enter_a_valid_password_password(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 10321000,
              "status": "passed"
            },
            "line": 18,
            "name": "I click on the create account button to create a new account with an existing username",
            "match": {
              "location": "com.example.LeagueFantasy.step_definitions.CreateAccountStepDefinitions.i_click_on_the_create_account_button_to_create_a_new_account_with_an_existing_username()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 27983000,
              "status": "passed"
            },
            "line": 19,
            "name": "the user with username \"abhiprav\" should not be created",
            "match": {
              "arguments": [
                {
                  "val": "\"abhiprav\"",
                  "offset": 23
                }
              ],
              "location": "com.example.LeagueFantasy.step_definitions.CreateAccountStepDefinitions.the_user_with_username_username_should_not_be_created(java.lang.String)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "start_timestamp": "2024-03-23T17:38:07.325Z",
        "line": 21,
        "name": "Email already registered to an account (Alternate Flow)",
        "description": "",
        "id": "create-a-new-user-account;email-already-registered-to-an-account-(alternate-flow)",
        "after": [
          {
            "result": {
              "duration": 9466000,
              "status": "passed"
            },
            "match": {
              "location": "com.example.LeagueFantasy.step_definitions.CreateLeagueStepDefinitions.tearDown()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 11280000,
              "status": "passed"
            },
            "line": 22,
            "name": "a user with the email \"tom@gmail.com\" exists",
            "match": {
              "arguments": [
                {
                  "val": "\"tom@gmail.com\"",
                  "offset": 22
                }
              ],
              "location": "com.example.LeagueFantasy.step_definitions.CreateAccountStepDefinitions.a_user_with_the_email_email_exists(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 182000,
              "status": "passed"
            },
            "line": 23,
            "name": "I enter a valid username \"tomJones\"",
            "match": {
              "arguments": [
                {
                  "val": "\"tomJones\"",
                  "offset": 25
                }
              ],
              "location": "com.example.LeagueFantasy.step_definitions.CreateAccountStepDefinitions.i_enter_a_valid_username_username(java.lang.String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 207000,
              "status": "passed"
            },
            "line": 24,
            "name": "I enter a valid name \"Tom Jones\"",
            "match": {
              "arguments": [
                {
                  "val": "\"Tom Jones\"",
                  "offset": 21
                }
              ],
              "location": "com.example.LeagueFantasy.step_definitions.CreateAccountStepDefinitions.i_enter_a_valid_name_name(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 188000,
              "status": "passed"
            },
            "line": 25,
            "name": "I enter a valid but existing email \"tom@gmail.com\"",
            "match": {
              "arguments": [
                {
                  "val": "\"tom@gmail.com\"",
                  "offset": 35
                }
              ],
              "location": "com.example.LeagueFantasy.step_definitions.CreateAccountStepDefinitions.i_enter_an_existing_email_email(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 193000,
              "status": "passed"
            },
            "line": 26,
            "name": "I enter a valid password \"otherPassword\"",
            "match": {
              "arguments": [
                {
                  "val": "\"otherPassword\"",
                  "offset": 25
                }
              ],
              "location": "com.example.LeagueFantasy.step_definitions.CreateAccountStepDefinitions.i_enter_a_valid_password_password(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 4576000,
              "status": "passed"
            },
            "line": 27,
            "name": "I click on the create account button to create a new account with an existing email",
            "match": {
              "location": "com.example.LeagueFantasy.step_definitions.CreateAccountStepDefinitions.i_click_on_the_create_account_button_to_create_a_new_account_with_an_existing_email()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 21128000,
              "status": "passed"
            },
            "line": 28,
            "name": "the user with email \"tom@gmail.com\" should not be created",
            "match": {
              "arguments": [
                {
                  "val": "\"tom@gmail.com\"",
                  "offset": 20
                }
              ],
              "location": "com.example.LeagueFantasy.step_definitions.CreateAccountStepDefinitions.the_user_with_email_email_should_not_be_created(java.lang.String)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "start_timestamp": "2024-03-23T17:38:07.406Z",
        "line": 30,
        "name": "Provided password less than 8 characters (Error Flow)",
        "description": "",
        "id": "create-a-new-user-account;provided-password-less-than-8-characters-(error-flow)",
        "after": [
          {
            "result": {
              "duration": 6197000,
              "status": "passed"
            },
            "match": {
              "location": "com.example.LeagueFantasy.step_definitions.CreateLeagueStepDefinitions.tearDown()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 3771000,
              "status": "passed"
            },
            "line": 31,
            "name": "no user with the username \"jerrySoccer\" exists",
            "match": {
              "arguments": [
                {
                  "val": "\"jerrySoccer\"",
                  "offset": 26
                }
              ],
              "location": "com.example.LeagueFantasy.step_definitions.CreateAccountStepDefinitions.no_user_with_the_username_username_exists(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 228000,
              "status": "passed"
            },
            "line": 32,
            "name": "I enter a valid username \"jerrySoccer\"",
            "match": {
              "arguments": [
                {
                  "val": "\"jerrySoccer\"",
                  "offset": 25
                }
              ],
              "location": "com.example.LeagueFantasy.step_definitions.CreateAccountStepDefinitions.i_enter_a_valid_username_username(java.lang.String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 259000,
              "status": "passed"
            },
            "line": 33,
            "name": "I enter a valid name \"Jerry Seinfeld\"",
            "match": {
              "arguments": [
                {
                  "val": "\"Jerry Seinfeld\"",
                  "offset": 21
                }
              ],
              "location": "com.example.LeagueFantasy.step_definitions.CreateAccountStepDefinitions.i_enter_a_valid_name_name(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 226000,
              "status": "passed"
            },
            "line": 34,
            "name": "I enter a valid email \"jerry@gmail.com\"",
            "match": {
              "arguments": [
                {
                  "val": "\"jerry@gmail.com\"",
                  "offset": 22
                }
              ],
              "location": "com.example.LeagueFantasy.step_definitions.CreateAccountStepDefinitions.i_enter_a_valid_email_email(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 322000,
              "status": "passed"
            },
            "line": 35,
            "name": "I enter a valid password \"invalid\"",
            "match": {
              "arguments": [
                {
                  "val": "\"invalid\"",
                  "offset": 25
                }
              ],
              "location": "com.example.LeagueFantasy.step_definitions.CreateAccountStepDefinitions.i_enter_a_valid_password_password(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 7429000,
              "status": "passed"
            },
            "line": 36,
            "name": "I click on the create account button to create a new account with an invalid password",
            "match": {
              "location": "com.example.LeagueFantasy.step_definitions.CreateAccountStepDefinitions.i_click_on_the_create_account_button_to_create_a_new_account_with_an_invalid_password()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3735000,
              "status": "passed"
            },
            "line": 37,
            "name": "the user with username \"jerrySoccer\" should not be created due to invalid information.",
            "match": {
              "arguments": [
                {
                  "val": "\"jerrySoccer\"",
                  "offset": 23
                }
              ],
              "location": "com.example.LeagueFantasy.step_definitions.CreateAccountStepDefinitions.the_user_with_username_username_should_not_be_created_due_to_invalid_information(java.lang.String)"
            },
            "keyword": "Then "
          }
        ]
      }
    ],
    "name": "Create a new user account",
    "description": "",
    "id": "create-a-new-user-account",
    "keyword": "Feature",
    "uri": "file:src/test/resources/create_account.feature",
    "tags": []
  },
  {
    "line": 2,
    "elements": [
      {
        "start_timestamp": "2024-03-23T17:38:07.457Z",
        "line": 6,
        "name": "The user successfully creates a new league",
        "description": "",
        "id": "create-a-new-league;the-user-successfully-creates-a-new-league",
        "after": [
          {
            "result": {
              "duration": 10999000,
              "status": "passed"
            },
            "match": {
              "location": "com.example.LeagueFantasy.step_definitions.CreateLeagueStepDefinitions.tearDown()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 4043000,
              "status": "passed"
            },
            "line": 7,
            "name": "the user is authenticated and on the Create League page",
            "match": {
              "location": "com.example.LeagueFantasy.step_definitions.CreateLeagueStepDefinitions.the_user_is_authenticated_and_on_the_create_league_page()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 448000,
              "status": "passed"
            },
            "line": 8,
            "name": "the user enters \"Summer Championship\" as the league name",
            "match": {
              "arguments": [
                {
                  "val": "\"Summer Championship\"",
                  "offset": 16
                }
              ],
              "location": "com.example.LeagueFantasy.step_definitions.CreateLeagueStepDefinitions.the_user_enters_as_the_league_name(java.lang.String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 19470000,
              "status": "passed"
            },
            "line": 9,
            "name": "the user submits the league creation form",
            "match": {
              "location": "com.example.LeagueFantasy.step_definitions.CreateLeagueStepDefinitions.the_user_submits_the_league_creation_form()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 322000,
              "status": "passed"
            },
            "line": 10,
            "name": "the user should receive a confirmation message \"League created successfully.\"",
            "match": {
              "arguments": [
                {
                  "val": "\"League created successfully.\"",
                  "offset": 47
                }
              ],
              "location": "com.example.LeagueFantasy.step_definitions.CreateLeagueStepDefinitions.the_user_should_receive_a_confirmation_message(java.lang.String)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "start_timestamp": "2024-03-23T17:38:07.527Z",
        "line": 13,
        "name": "Attempting to create a league with a name that already exists",
        "description": "",
        "id": "create-a-new-league;attempting-to-create-a-league-with-a-name-that-already-exists",
        "after": [
          {
            "result": {
              "duration": 14485000,
              "status": "passed"
            },
            "match": {
              "location": "com.example.LeagueFantasy.step_definitions.CreateLeagueStepDefinitions.tearDown()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 5642000,
              "status": "passed"
            },
            "line": 14,
            "name": "the user is authenticated and on the Create League page",
            "match": {
              "location": "com.example.LeagueFantasy.step_definitions.CreateLeagueStepDefinitions.the_user_is_authenticated_and_on_the_create_league_page()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 320000,
              "status": "passed"
            },
            "line": 15,
            "name": "the user enters \"Summer Championship\" as the league name",
            "match": {
              "arguments": [
                {
                  "val": "\"Summer Championship\"",
                  "offset": 16
                }
              ],
              "location": "com.example.LeagueFantasy.step_definitions.CreateLeagueStepDefinitions.the_user_enters_as_the_league_name(java.lang.String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 7208000,
              "status": "passed"
            },
            "line": 16,
            "name": "the league name \"Summer Championship\" already exists",
            "match": {
              "arguments": [
                {
                  "val": "\"Summer Championship\"",
                  "offset": 16
                }
              ],
              "location": "com.example.LeagueFantasy.step_definitions.CreateLeagueStepDefinitions.the_league_name_already_exists(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 20236000,
              "status": "passed"
            },
            "line": 17,
            "name": "the user submits the league creation form",
            "match": {
              "location": "com.example.LeagueFantasy.step_definitions.CreateLeagueStepDefinitions.the_user_submits_the_league_creation_form()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 269000,
              "status": "passed"
            },
            "line": 18,
            "name": "the user should see an error message \"League name already exists, please choose another name.\"",
            "match": {
              "arguments": [
                {
                  "val": "\"League name already exists, please choose another name.\"",
                  "offset": 37
                }
              ],
              "location": "com.example.LeagueFantasy.step_definitions.CreateLeagueStepDefinitions.the_user_should_see_an_error_message(java.lang.String)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "start_timestamp": "2024-03-23T17:38:07.620Z",
        "line": 21,
        "name": "Prevent a user from joining multiple leagues",
        "description": "",
        "id": "create-a-new-league;prevent-a-user-from-joining-multiple-leagues",
        "after": [
          {
            "result": {
              "duration": 17211000,
              "status": "passed"
            },
            "match": {
              "location": "com.example.LeagueFantasy.step_definitions.CreateLeagueStepDefinitions.tearDown()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 31029000,
              "status": "passed"
            },
            "line": 22,
            "name": "a user \"JohnDoe\" is already a member of \"Professional Europa League\"",
            "match": {
              "arguments": [
                {
                  "val": "\"JohnDoe\"",
                  "offset": 7
                },
                {
                  "val": "\"Professional Europa League\"",
                  "offset": 40
                }
              ],
              "location": "com.example.LeagueFantasy.step_definitions.CreateLeagueStepDefinitions.a_user_is_already_a_member_of(java.lang.String,java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 8927000,
              "status": "passed"
            },
            "line": 23,
            "name": "a user \"JohnDoe\" tries to create a new league \"Professional Chess League\"",
            "match": {
              "arguments": [
                {
                  "val": "\"JohnDoe\"",
                  "offset": 7
                },
                {
                  "val": "\"Professional Chess League\"",
                  "offset": 46
                }
              ],
              "location": "com.example.LeagueFantasy.step_definitions.CreateLeagueStepDefinitions.a_user_tries_to_create_a_new_league(java.lang.String,java.lang.String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 242000,
              "status": "passed"
            },
            "line": 24,
            "name": "\"JohnDoe\" should see an error message saying \"You are already in a league.\"",
            "match": {
              "arguments": [
                {
                  "val": "\"JohnDoe\"",
                  "offset": 0
                },
                {
                  "val": "\"You are already in a league.\"",
                  "offset": 45
                }
              ],
              "location": "com.example.LeagueFantasy.step_definitions.CreateLeagueStepDefinitions.user_should_see_an_error_message_saying(java.lang.String,java.lang.String)"
            },
            "keyword": "Then "
          }
        ]
      }
    ],
    "name": "Create a new league",
    "description": "",
    "id": "create-a-new-league",
    "keyword": "Feature",
    "uri": "file:src/test/resources/create_league.feature",
    "tags": []
  },
  {
    "line": 1,
    "elements": [
      {
        "start_timestamp": "2024-03-23T17:38:07.718Z",
        "line": 3,
        "name": "Successfully create a new user team (Normal Flow)",
        "description": "",
        "id": "create-a-new-user-team;successfully-create-a-new-user-team-(normal-flow)",
        "after": [
          {
            "result": {
              "duration": 8116000,
              "status": "passed"
            },
            "match": {
              "location": "com.example.LeagueFantasy.step_definitions.CreateLeagueStepDefinitions.tearDown()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 23588000,
              "status": "passed"
            },
            "line": 4,
            "name": "a user with the username \"kdach\" exists when creating a new user team",
            "match": {
              "arguments": [
                {
                  "val": "\"kdach\"",
                  "offset": 25
                }
              ],
              "location": "com.example.LeagueFantasy.step_definitions.CreateUserTeamStepDefinitions.a_user_with_the_username_username_exists(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 214000,
              "status": "passed"
            },
            "line": 5,
            "name": "I enter a valid user team name \"MyNewTeamWeek1\"",
            "match": {
              "arguments": [
                {
                  "val": "\"MyNewTeamWeek1\"",
                  "offset": 31
                }
              ],
              "location": "com.example.LeagueFantasy.step_definitions.CreateUserTeamStepDefinitions.i_enter_a_valid_user_team_name_name(java.lang.String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 121000,
              "status": "passed"
            },
            "line": 6,
            "name": "set it to active",
            "match": {
              "location": "com.example.LeagueFantasy.step_definitions.CreateUserTeamStepDefinitions.set_it_to_active()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 14209000,
              "status": "passed"
            },
            "line": 7,
            "name": "I click on the create team button",
            "match": {
              "location": "com.example.LeagueFantasy.step_definitions.CreateUserTeamStepDefinitions.i_click_on_the_create_team_button()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 14880000,
              "status": "passed"
            },
            "line": 8,
            "name": "the user team with name \"MyNewTeamWeek1\" should be created",
            "match": {
              "arguments": [
                {
                  "val": "\"MyNewTeamWeek1\"",
                  "offset": 24
                }
              ],
              "location": "com.example.LeagueFantasy.step_definitions.CreateUserTeamStepDefinitions.the_user_team_with_name_name_should_be_created(java.lang.String)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "start_timestamp": "2024-03-23T17:38:07.808Z",
        "line": 10,
        "name": "Name of new user team is empty (Alternate Flow)",
        "description": "",
        "id": "create-a-new-user-team;name-of-new-user-team-is-empty-(alternate-flow)",
        "after": [
          {
            "result": {
              "duration": 10039000,
              "status": "passed"
            },
            "match": {
              "location": "com.example.LeagueFantasy.step_definitions.CreateLeagueStepDefinitions.tearDown()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 15396000,
              "status": "passed"
            },
            "line": 11,
            "name": "a user with the username \"kdach\" exists when creating a new user team",
            "match": {
              "arguments": [
                {
                  "val": "\"kdach\"",
                  "offset": 25
                }
              ],
              "location": "com.example.LeagueFantasy.step_definitions.CreateUserTeamStepDefinitions.a_user_with_the_username_username_exists(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 161000,
              "status": "passed"
            },
            "line": 12,
            "name": "I enter an empty user team name \"\"",
            "match": {
              "arguments": [
                {
                  "val": "\"\"",
                  "offset": 32
                }
              ],
              "location": "com.example.LeagueFantasy.step_definitions.CreateUserTeamStepDefinitions.i_enter_an_empty_user_team_name_name(java.lang.String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 103000,
              "status": "passed"
            },
            "line": 13,
            "name": "set it to active",
            "match": {
              "location": "com.example.LeagueFantasy.step_definitions.CreateUserTeamStepDefinitions.set_it_to_active()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1239000,
              "status": "passed"
            },
            "line": 14,
            "name": "I click on the create team button to try and create an invalid team",
            "match": {
              "location": "com.example.LeagueFantasy.step_definitions.CreateUserTeamStepDefinitions.i_click_on_the_create_team_button_to_try_and_create_an_invalid_team()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 7726000,
              "status": "passed"
            },
            "line": 15,
            "name": "the user team with an empty name should not be created",
            "match": {
              "location": "com.example.LeagueFantasy.step_definitions.CreateUserTeamStepDefinitions.the_user_team_with_an_empty_name_should_not_be_created()"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "start_timestamp": "2024-03-23T17:38:07.875Z",
        "line": 17,
        "name": "Manager already has another team that must be set to inactive (Alternate Flow)",
        "description": "",
        "id": "create-a-new-user-team;manager-already-has-another-team-that-must-be-set-to-inactive-(alternate-flow)",
        "after": [
          {
            "result": {
              "duration": 7131000,
              "status": "passed"
            },
            "match": {
              "location": "com.example.LeagueFantasy.step_definitions.CreateLeagueStepDefinitions.tearDown()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 9335000,
              "status": "passed"
            },
            "line": 18,
            "name": "a user with the username \"kdach\" exists when creating a new user team",
            "match": {
              "arguments": [
                {
                  "val": "\"kdach\"",
                  "offset": 25
                }
              ],
              "location": "com.example.LeagueFantasy.step_definitions.CreateUserTeamStepDefinitions.a_user_with_the_username_username_exists(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 22587000,
              "status": "passed"
            },
            "line": 19,
            "name": "the user has already created a team with the name \"ExistingTeam\" and status active",
            "match": {
              "arguments": [
                {
                  "val": "\"ExistingTeam\"",
                  "offset": 50
                }
              ],
              "location": "com.example.LeagueFantasy.step_definitions.CreateUserTeamStepDefinitions.the_user_has_already_created_a_team_with_the_name_name(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 241000,
              "status": "passed"
            },
            "line": 20,
            "name": "I enter a valid user team name \"NewTeamNewWeek\"",
            "match": {
              "arguments": [
                {
                  "val": "\"NewTeamNewWeek\"",
                  "offset": 31
                }
              ],
              "location": "com.example.LeagueFantasy.step_definitions.CreateUserTeamStepDefinitions.i_enter_a_valid_user_team_name_name(java.lang.String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 294000,
              "status": "passed"
            },
            "line": 21,
            "name": "set it to active",
            "match": {
              "location": "com.example.LeagueFantasy.step_definitions.CreateUserTeamStepDefinitions.set_it_to_active()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 9206000,
              "status": "passed"
            },
            "line": 22,
            "name": "I click on the create team button to create another team",
            "match": {
              "location": "com.example.LeagueFantasy.step_definitions.CreateUserTeamStepDefinitions.i_click_on_the_create_team_button_to_create_another_team()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 25478000,
              "status": "passed"
            },
            "line": 23,
            "name": "the user team with name \"ExistingTeam\" should be updated to inactive",
            "match": {
              "arguments": [
                {
                  "val": "\"ExistingTeam\"",
                  "offset": 24
                }
              ],
              "location": "com.example.LeagueFantasy.step_definitions.CreateUserTeamStepDefinitions.then_the_user_team_with_name_name_should_be_updated_to_inactive(java.lang.String)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "start_timestamp": "2024-03-23T17:38:07.974Z",
        "line": 25,
        "name": "User requesting new user team does not exist (Error Flow)",
        "description": "",
        "id": "create-a-new-user-team;user-requesting-new-user-team-does-not-exist-(error-flow)",
        "after": [
          {
            "result": {
              "duration": 8169000,
              "status": "passed"
            },
            "match": {
              "location": "com.example.LeagueFantasy.step_definitions.CreateLeagueStepDefinitions.tearDown()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 2148000,
              "status": "passed"
            },
            "line": 26,
            "name": "a user with the username \"rorymcilroy\" does not exist when creating a new user team",
            "match": {
              "arguments": [
                {
                  "val": "\"rorymcilroy\"",
                  "offset": 25
                }
              ],
              "location": "com.example.LeagueFantasy.step_definitions.CreateUserTeamStepDefinitions.a_user_with_the_username_username_does_not_exist(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 189000,
              "status": "passed"
            },
            "line": 27,
            "name": "I enter a valid user team name \"RorysTeams5\"",
            "match": {
              "arguments": [
                {
                  "val": "\"RorysTeams5\"",
                  "offset": 31
                }
              ],
              "location": "com.example.LeagueFantasy.step_definitions.CreateUserTeamStepDefinitions.i_enter_a_valid_user_team_name_name(java.lang.String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 89000,
              "status": "passed"
            },
            "line": 28,
            "name": "set it to active",
            "match": {
              "location": "com.example.LeagueFantasy.step_definitions.CreateUserTeamStepDefinitions.set_it_to_active()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 4346000,
              "status": "passed"
            },
            "line": 29,
            "name": "I click on the create team button to try and create an invalid team",
            "match": {
              "location": "com.example.LeagueFantasy.step_definitions.CreateUserTeamStepDefinitions.i_click_on_the_create_team_button_to_try_and_create_an_invalid_team()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3130000,
              "status": "passed"
            },
            "line": 30,
            "name": "the user team with invalid manager should not be created",
            "match": {
              "location": "com.example.LeagueFantasy.step_definitions.CreateUserTeamStepDefinitions.the_user_team_with_invalid_manager_should_not_be_created()"
            },
            "keyword": "Then "
          }
        ]
      }
    ],
    "name": "Create a new user team",
    "description": "",
    "id": "create-a-new-user-team",
    "keyword": "Feature",
    "uri": "file:src/test/resources/create_user_team.feature",
    "tags": []
  },
  {
    "line": 1,
    "elements": [
      {
        "start_timestamp": "2024-03-23T17:38:08.012Z",
        "line": 3,
        "name": "Successful login (Normal Flow)",
        "description": "",
        "id": "login-to-existing-account;successful-login-(normal-flow)",
        "after": [
          {
            "result": {
              "duration": 9840000,
              "status": "passed"
            },
            "match": {
              "location": "com.example.LeagueFantasy.step_definitions.CreateLeagueStepDefinitions.tearDown()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 5289000,
              "status": "passed"
            },
            "line": 4,
            "name": "a user with the username \"abhiprav\" and password \"password123\" exists",
            "match": {
              "arguments": [
                {
                  "val": "\"abhiprav\"",
                  "offset": 25
                },
                {
                  "val": "\"password123\"",
                  "offset": 49
                }
              ],
              "location": "com.example.LeagueFantasy.step_definitions.LoginToAccountStepDefinitions.i_have_an_account_with_the_username_username(java.lang.String,java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 200000,
              "status": "passed"
            },
            "line": 5,
            "name": "I enter the valid username \"abhiprav\"",
            "match": {
              "arguments": [
                {
                  "val": "\"abhiprav\"",
                  "offset": 27
                }
              ],
              "location": "com.example.LeagueFantasy.step_definitions.LoginToAccountStepDefinitions.i_enter_a_correct_username_username(java.lang.String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 164000,
              "status": "passed"
            },
            "line": 6,
            "name": "the correct, corresponding password \"password123\"",
            "match": {
              "arguments": [
                {
                  "val": "\"password123\"",
                  "offset": 36
                }
              ],
              "location": "com.example.LeagueFantasy.step_definitions.LoginToAccountStepDefinitions.i_enter_a_correct_password_password(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3728000,
              "status": "passed"
            },
            "line": 7,
            "name": "I click on the login button",
            "match": {
              "location": "com.example.LeagueFantasy.step_definitions.LoginToAccountStepDefinitions.i_click_on_the_login_button()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 254000,
              "status": "passed"
            },
            "line": 8,
            "name": "I am redirected to the main dashboard for the associated account",
            "match": {
              "location": "com.example.LeagueFantasy.step_definitions.LoginToAccountStepDefinitions.i_am_redirected_to_the_main_dashboard_for_the_associated_account()"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "start_timestamp": "2024-03-23T17:38:08.051Z",
        "line": 10,
        "name": "Unsuccessful login due to incorrect password (Alternate Flow)",
        "description": "",
        "id": "login-to-existing-account;unsuccessful-login-due-to-incorrect-password-(alternate-flow)",
        "after": [
          {
            "result": {
              "duration": 8570000,
              "status": "passed"
            },
            "match": {
              "location": "com.example.LeagueFantasy.step_definitions.CreateLeagueStepDefinitions.tearDown()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 2988000,
              "status": "passed"
            },
            "line": 11,
            "name": "a user with the username \"abhiprav\" and password \"password123\" exists",
            "match": {
              "arguments": [
                {
                  "val": "\"abhiprav\"",
                  "offset": 25
                },
                {
                  "val": "\"password123\"",
                  "offset": 49
                }
              ],
              "location": "com.example.LeagueFantasy.step_definitions.LoginToAccountStepDefinitions.i_have_an_account_with_the_username_username(java.lang.String,java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 212000,
              "status": "passed"
            },
            "line": 12,
            "name": "I enter the valid username \"abhiprav\"",
            "match": {
              "arguments": [
                {
                  "val": "\"abhiprav\"",
                  "offset": 27
                }
              ],
              "location": "com.example.LeagueFantasy.step_definitions.LoginToAccountStepDefinitions.i_enter_a_correct_username_username(java.lang.String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 158000,
              "status": "passed"
            },
            "line": 13,
            "name": "the incorrect password \"password987654321\"",
            "match": {
              "arguments": [
                {
                  "val": "\"password987654321\"",
                  "offset": 23
                }
              ],
              "location": "com.example.LeagueFantasy.step_definitions.LoginToAccountStepDefinitions.i_enter_an_incorrect_password_password(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3508000,
              "status": "passed"
            },
            "line": 14,
            "name": "I click on the login button with an incorrect provided password",
            "match": {
              "location": "com.example.LeagueFantasy.step_definitions.LoginToAccountStepDefinitions.i_click_on_the_login_button_with_an_incorrect_provided_password()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 130000,
              "status": "passed"
            },
            "line": 15,
            "name": "I am informed that password is incorrect",
            "match": {
              "location": "com.example.LeagueFantasy.step_definitions.LoginToAccountStepDefinitions.i_am_informed_that_password_is_incorrect()"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "start_timestamp": "2024-03-23T17:38:08.086Z",
        "line": 17,
        "name": "Non-existing username unsuccessful login (Error Flow)",
        "description": "",
        "id": "login-to-existing-account;non-existing-username-unsuccessful-login-(error-flow)",
        "after": [
          {
            "result": {
              "duration": 5283000,
              "status": "passed"
            },
            "match": {
              "location": "com.example.LeagueFantasy.step_definitions.CreateLeagueStepDefinitions.tearDown()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 374000,
              "status": "passed"
            },
            "line": 18,
            "name": "a user with the username \"oopmaLoompa\" does not exist",
            "match": {
              "arguments": [
                {
                  "val": "\"oopmaLoompa\"",
                  "offset": 25
                }
              ],
              "location": "com.example.LeagueFantasy.step_definitions.LoginToAccountStepDefinitions.a_user_with_the_username_username_does_not_exist(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 101000,
              "status": "passed"
            },
            "line": 19,
            "name": "I enter the valid username \"oopmaLoompa\"",
            "match": {
              "arguments": [
                {
                  "val": "\"oopmaLoompa\"",
                  "offset": 27
                }
              ],
              "location": "com.example.LeagueFantasy.step_definitions.LoginToAccountStepDefinitions.i_enter_a_correct_username_username(java.lang.String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 202000,
              "status": "passed"
            },
            "line": 20,
            "name": "the correct, corresponding password \"chocolateFactory123\"",
            "match": {
              "arguments": [
                {
                  "val": "\"chocolateFactory123\"",
                  "offset": 36
                }
              ],
              "location": "com.example.LeagueFantasy.step_definitions.LoginToAccountStepDefinitions.i_enter_a_correct_password_password(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3080000,
              "status": "passed"
            },
            "line": 21,
            "name": "I click on the login button with a non-existent username",
            "match": {
              "location": "com.example.LeagueFantasy.step_definitions.LoginToAccountStepDefinitions.i_click_on_the_login_button_with_a_non_existent_username()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 431000,
              "status": "passed"
            },
            "line": 22,
            "name": "I am informed that username does not exist",
            "match": {
              "location": "com.example.LeagueFantasy.step_definitions.LoginToAccountStepDefinitions.i_am_informed_that_username_does_not_exist()"
            },
            "keyword": "Then "
          }
        ]
      }
    ],
    "name": "Login to existing account",
    "description": "",
    "id": "login-to-existing-account",
    "keyword": "Feature",
    "uri": "file:src/test/resources/login_to_existing_account.feature",
    "tags": []
  },
  {
    "line": 1,
    "elements": [
      {
        "start_timestamp": "2024-03-23T17:38:08.113Z",
        "line": 9,
        "name": "Querying for a specific forward in the system",
        "description": "",
        "id": "query-all-forwards;querying-for-a-specific-forward-in-the-system;;2",
        "after": [
          {
            "result": {
              "duration": 4799000,
              "status": "passed"
            },
            "match": {
              "location": "com.example.LeagueFantasy.step_definitions.CreateLeagueStepDefinitions.tearDown()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 4380000,
              "status": "passed"
            },
            "line": 3,
            "name": "that there is a forward \"Cristiano Ronaldo\" in the system",
            "match": {
              "arguments": [
                {
                  "val": "\"Cristiano Ronaldo\"",
                  "offset": 24
                }
              ],
              "location": "com.example.LeagueFantasy.step_definitions.QueryAllForwardsStepDefinitions.givenKeeperExists(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 3375000,
              "status": "passed"
            },
            "line": 4,
            "name": "I query all forward",
            "match": {
              "location": "com.example.LeagueFantasy.step_definitions.QueryAllForwardsStepDefinitions.whenIQueryAllForwards()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1372000,
              "status": "passed"
            },
            "line": 5,
            "name": "I am shown a list of all forwards that includes \"Cristiano Ronaldo\"",
            "match": {
              "arguments": [
                {
                  "val": "\"Cristiano Ronaldo\"",
                  "offset": 48
                }
              ],
              "location": "com.example.LeagueFantasy.step_definitions.QueryAllForwardsStepDefinitions.thenIShownListOfForwards(java.lang.String)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "start_timestamp": "2024-03-23T17:38:08.146Z",
        "line": 10,
        "name": "Querying for a specific forward in the system",
        "description": "",
        "id": "query-all-forwards;querying-for-a-specific-forward-in-the-system;;3",
        "after": [
          {
            "result": {
              "duration": 5726000,
              "status": "passed"
            },
            "match": {
              "location": "com.example.LeagueFantasy.step_definitions.CreateLeagueStepDefinitions.tearDown()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 2274000,
              "status": "passed"
            },
            "line": 3,
            "name": "that there is a forward \"Lionel Messi\" in the system",
            "match": {
              "arguments": [
                {
                  "val": "\"Lionel Messi\"",
                  "offset": 24
                }
              ],
              "location": "com.example.LeagueFantasy.step_definitions.QueryAllForwardsStepDefinitions.givenKeeperExists(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 4960000,
              "status": "passed"
            },
            "line": 4,
            "name": "I query all forward",
            "match": {
              "location": "com.example.LeagueFantasy.step_definitions.QueryAllForwardsStepDefinitions.whenIQueryAllForwards()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 289000,
              "status": "passed"
            },
            "line": 5,
            "name": "I am shown a list of all forwards that includes \"Lionel Messi\"",
            "match": {
              "arguments": [
                {
                  "val": "\"Lionel Messi\"",
                  "offset": 48
                }
              ],
              "location": "com.example.LeagueFantasy.step_definitions.QueryAllForwardsStepDefinitions.thenIShownListOfForwards(java.lang.String)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "start_timestamp": "2024-03-23T17:38:08.177Z",
        "line": 11,
        "name": "Querying for a specific forward in the system",
        "description": "",
        "id": "query-all-forwards;querying-for-a-specific-forward-in-the-system;;4",
        "after": [
          {
            "result": {
              "duration": 6751000,
              "status": "passed"
            },
            "match": {
              "location": "com.example.LeagueFantasy.step_definitions.CreateLeagueStepDefinitions.tearDown()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 2241000,
              "status": "passed"
            },
            "line": 3,
            "name": "that there is a forward \"Robert Lewandowski\" in the system",
            "match": {
              "arguments": [
                {
                  "val": "\"Robert Lewandowski\"",
                  "offset": 24
                }
              ],
              "location": "com.example.LeagueFantasy.step_definitions.QueryAllForwardsStepDefinitions.givenKeeperExists(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 2745000,
              "status": "passed"
            },
            "line": 4,
            "name": "I query all forward",
            "match": {
              "location": "com.example.LeagueFantasy.step_definitions.QueryAllForwardsStepDefinitions.whenIQueryAllForwards()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 183000,
              "status": "passed"
            },
            "line": 5,
            "name": "I am shown a list of all forwards that includes \"Robert Lewandowski\"",
            "match": {
              "arguments": [
                {
                  "val": "\"Robert Lewandowski\"",
                  "offset": 48
                }
              ],
              "location": "com.example.LeagueFantasy.step_definitions.QueryAllForwardsStepDefinitions.thenIShownListOfForwards(java.lang.String)"
            },
            "keyword": "Then "
          }
        ]
      }
    ],
    "name": "Query all forwards",
    "description": "",
    "id": "query-all-forwards",
    "keyword": "Feature",
    "uri": "file:src/test/resources/query_all_forwards.feature",
    "tags": []
  },
  {
    "line": 1,
    "elements": [
      {
        "start_timestamp": "2024-03-23T17:38:08.207Z",
        "line": 7,
        "name": "Exact player position",
        "description": "",
        "id": "query-players-by-position;exact-player-position",
        "after": [
          {
            "result": {
              "duration": 5451000,
              "status": "passed"
            },
            "match": {
              "location": "com.example.LeagueFantasy.step_definitions.CreateLeagueStepDefinitions.tearDown()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 4708000,
              "status": "passed"
            },
            "line": 8,
            "name": "that there is a position \"Midfielder\" in the system containing players",
            "match": {
              "arguments": [
                {
                  "val": "\"Midfielder\"",
                  "offset": 25
                }
              ],
              "location": "com.example.LeagueFantasy.step_definitions.QueryForwardByPositionStepDefinitions.givenPositionContainsPlayer(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 5099000,
              "status": "passed"
            },
            "line": 9,
            "name": "I query players by position \"Midfielder\"",
            "match": {
              "arguments": [
                {
                  "val": "\"Midfielder\"",
                  "offset": 28
                }
              ],
              "location": "com.example.LeagueFantasy.step_definitions.QueryForwardByPositionStepDefinitions.whenISelectPosition(java.lang.String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 681000,
              "status": "passed"
            },
            "line": 10,
            "name": "I am shown a list of players in that position that includes \"Ngolo Kante\"",
            "match": {
              "arguments": [
                {
                  "val": "\"Ngolo Kante\"",
                  "offset": 60
                }
              ],
              "location": "com.example.LeagueFantasy.step_definitions.QueryForwardByPositionStepDefinitions.thenListIncludesPlayer(java.lang.String)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "start_timestamp": "2024-03-23T17:38:08.243Z",
        "line": 12,
        "name": "No matches",
        "description": "",
        "id": "query-players-by-position;no-matches",
        "after": [
          {
            "result": {
              "duration": 4983000,
              "status": "passed"
            },
            "match": {
              "location": "com.example.LeagueFantasy.step_definitions.CreateLeagueStepDefinitions.tearDown()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 3919000,
              "status": "passed"
            },
            "line": 13,
            "name": "that there are no players in the system playing as \"Defender\"",
            "match": {
              "arguments": [
                {
                  "val": "\"Defender\"",
                  "offset": 51
                }
              ],
              "location": "com.example.LeagueFantasy.step_definitions.QueryForwardByPositionStepDefinitions.givenPositionDoesntContainPlayer(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 3843000,
              "status": "passed"
            },
            "line": 14,
            "name": "I query players by position \"Defender\"",
            "match": {
              "arguments": [
                {
                  "val": "\"Defender\"",
                  "offset": 28
                }
              ],
              "location": "com.example.LeagueFantasy.step_definitions.QueryForwardByPositionStepDefinitions.whenISelectPosition(java.lang.String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 242000,
              "status": "passed"
            },
            "line": 15,
            "name": "I am prompted that no results were found",
            "match": {
              "location": "com.example.LeagueFantasy.step_definitions.QueryForwardByPositionStepDefinitions.thenListDoesntIncludesPlayer()"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "start_timestamp": "2024-03-23T17:38:08.274Z",
        "line": 17,
        "name": "Position not found",
        "description": "",
        "id": "query-players-by-position;position-not-found",
        "after": [
          {
            "result": {
              "duration": 5448000,
              "status": "passed"
            },
            "match": {
              "location": "com.example.LeagueFantasy.step_definitions.CreateLeagueStepDefinitions.tearDown()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 4746000,
              "status": "passed"
            },
            "line": 18,
            "name": "that there is no \"Goalpost\" position in the system",
            "match": {
              "arguments": [
                {
                  "val": "\"Goalpost\"",
                  "offset": 17
                }
              ],
              "location": "com.example.LeagueFantasy.step_definitions.QueryForwardByPositionStepDefinitions.givenPositionDoesNotExist(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 2237000,
              "status": "passed"
            },
            "line": 19,
            "name": "I query players by position \"Goalpost\"",
            "match": {
              "arguments": [
                {
                  "val": "\"Goalpost\"",
                  "offset": 28
                }
              ],
              "location": "com.example.LeagueFantasy.step_definitions.QueryForwardByPositionStepDefinitions.whenISelectPosition(java.lang.String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 101000,
              "status": "passed"
            },
            "line": 20,
            "name": "I am shown a no position found error",
            "match": {
              "location": "com.example.LeagueFantasy.step_definitions.QueryForwardByPositionStepDefinitions.thenErrorNoPosition()"
            },
            "keyword": "Then "
          }
        ]
      }
    ],
    "name": "Query Players by Position",
    "description": "    In order to accurately find players for team selection\n    As a user of the League Fantasy system\n    I want to be able to search for players by their specific position or a partial match of their position",
    "id": "query-players-by-position",
    "keyword": "Feature",
    "uri": "file:src/test/resources/query_by_position_forward.feature",
    "tags": []
  },
  {
    "line": 1,
    "elements": [
      {
        "start_timestamp": "2024-03-23T17:38:08.305Z",
        "line": 14,
        "name": "Querying for a specific goalkeeper in the system",
        "description": "",
        "id": "query-goalkeepers-by-position;querying-for-a-specific-goalkeeper-in-the-system;;2",
        "after": [
          {
            "result": {
              "duration": 5505000,
              "status": "passed"
            },
            "match": {
              "location": "com.example.LeagueFantasy.step_definitions.CreateLeagueStepDefinitions.tearDown()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 3656000,
              "status": "passed"
            },
            "line": 8,
            "name": "that there is a keeper \"Lev Yashine\" in the system",
            "match": {
              "arguments": [
                {
                  "val": "\"Lev Yashine\"",
                  "offset": 23
                }
              ],
              "location": "com.example.LeagueFantasy.step_definitions.QueryKeeperByPositionStepDefinitions.givenKeeperExists(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 2762000,
              "status": "passed"
            },
            "line": 9,
            "name": "I query keeper \"Goalkeeper\"",
            "match": {
              "arguments": [
                {
                  "val": "\"Goalkeeper\"",
                  "offset": 15
                }
              ],
              "location": "com.example.LeagueFantasy.step_definitions.QueryKeeperByPositionStepDefinitions.whenQuery(java.lang.String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 97000,
              "status": "passed"
            },
            "line": 10,
            "name": "I am shown a list of all goalkeepers",
            "match": {
              "location": "com.example.LeagueFantasy.step_definitions.QueryKeeperByPositionStepDefinitions.thenListIncludesAllGoalkeepers()"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "start_timestamp": "2024-03-23T17:38:08.334Z",
        "line": 15,
        "name": "Querying for a specific goalkeeper in the system",
        "description": "",
        "id": "query-goalkeepers-by-position;querying-for-a-specific-goalkeeper-in-the-system;;3",
        "after": [
          {
            "result": {
              "duration": 4727000,
              "status": "passed"
            },
            "match": {
              "location": "com.example.LeagueFantasy.step_definitions.CreateLeagueStepDefinitions.tearDown()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 3234000,
              "status": "passed"
            },
            "line": 8,
            "name": "that there is a keeper \"Mike Maignan\" in the system",
            "match": {
              "arguments": [
                {
                  "val": "\"Mike Maignan\"",
                  "offset": 23
                }
              ],
              "location": "com.example.LeagueFantasy.step_definitions.QueryKeeperByPositionStepDefinitions.givenKeeperExists(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 2464000,
              "status": "passed"
            },
            "line": 9,
            "name": "I query keeper \"Goalkeeper\"",
            "match": {
              "arguments": [
                {
                  "val": "\"Goalkeeper\"",
                  "offset": 15
                }
              ],
              "location": "com.example.LeagueFantasy.step_definitions.QueryKeeperByPositionStepDefinitions.whenQuery(java.lang.String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 115000,
              "status": "passed"
            },
            "line": 10,
            "name": "I am shown a list of all goalkeepers",
            "match": {
              "location": "com.example.LeagueFantasy.step_definitions.QueryKeeperByPositionStepDefinitions.thenListIncludesAllGoalkeepers()"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "start_timestamp": "2024-03-23T17:38:08.361Z",
        "line": 16,
        "name": "Querying for a specific goalkeeper in the system",
        "description": "",
        "id": "query-goalkeepers-by-position;querying-for-a-specific-goalkeeper-in-the-system;;4",
        "after": [
          {
            "result": {
              "duration": 4841000,
              "status": "passed"
            },
            "match": {
              "location": "com.example.LeagueFantasy.step_definitions.CreateLeagueStepDefinitions.tearDown()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 4375000,
              "status": "passed"
            },
            "line": 8,
            "name": "that there is a keeper \"Kepa Arrizabalaga\" in the system",
            "match": {
              "arguments": [
                {
                  "val": "\"Kepa Arrizabalaga\"",
                  "offset": 23
                }
              ],
              "location": "com.example.LeagueFantasy.step_definitions.QueryKeeperByPositionStepDefinitions.givenKeeperExists(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 2721000,
              "status": "passed"
            },
            "line": 9,
            "name": "I query keeper \"Goalkeeper\"",
            "match": {
              "arguments": [
                {
                  "val": "\"Goalkeeper\"",
                  "offset": 15
                }
              ],
              "location": "com.example.LeagueFantasy.step_definitions.QueryKeeperByPositionStepDefinitions.whenQuery(java.lang.String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 205000,
              "status": "passed"
            },
            "line": 10,
            "name": "I am shown a list of all goalkeepers",
            "match": {
              "location": "com.example.LeagueFantasy.step_definitions.QueryKeeperByPositionStepDefinitions.thenListIncludesAllGoalkeepers()"
            },
            "keyword": "Then "
          }
        ]
      }
    ],
    "name": "Query Goalkeepers by Position",
    "description": "    In order to find goalkeepers for team selection\n    As a user of the League Fantasy system\n    I want to be able to search for goalkeepers by their position",
    "id": "query-goalkeepers-by-position",
    "keyword": "Feature",
    "uri": "file:src/test/resources/query_by_position_keeper.feature",
    "tags": []
  },
  {
    "line": 1,
    "elements": [
      {
        "start_timestamp": "2024-03-23T17:38:08.392Z",
        "line": 2,
        "name": "Display all forwards in league",
        "description": "",
        "id": "query-forwards-by-league;display-all-forwards-in-league",
        "after": [
          {
            "result": {
              "duration": 5593000,
              "status": "passed"
            },
            "match": {
              "location": "com.example.LeagueFantasy.step_definitions.CreateLeagueStepDefinitions.tearDown()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 4810000,
              "status": "passed"
            },
            "line": 3,
            "name": "that there is a league \"PremierLeague\" containing players",
            "match": {
              "arguments": [
                {
                  "val": "\"PremierLeague\"",
                  "offset": 23
                }
              ],
              "location": "com.example.LeagueFantasy.step_definitions.QueryForwardsByLeagueStepDefinitions.givenLeagueContainsPlayers(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 5213000,
              "status": "passed"
            },
            "line": 4,
            "name": "I select the \"PremierLeague\"",
            "match": {
              "arguments": [
                {
                  "val": "\"PremierLeague\"",
                  "offset": 13
                }
              ],
              "location": "com.example.LeagueFantasy.step_definitions.QueryForwardsByLeagueStepDefinitions.whenISelectLeague(java.lang.String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1080000,
              "status": "passed"
            },
            "line": 5,
            "name": "I am shown a list of all players in the league that includes \"Haaland\"",
            "match": {
              "arguments": [
                {
                  "val": "\"Haaland\"",
                  "offset": 61
                }
              ],
              "location": "com.example.LeagueFantasy.step_definitions.QueryForwardsByLeagueStepDefinitions.thenListIncludesPlayer(java.lang.String)"
            },
            "keyword": "Then "
          }
        ]
      }
    ],
    "name": "Query forwards by league",
    "description": "",
    "id": "query-forwards-by-league",
    "keyword": "Feature",
    "uri": "file:src/test/resources/query_forward_by_european_league.feature",
    "tags": []
  },
  {
    "line": 2,
    "elements": [
      {
        "start_timestamp": "2024-03-23T17:38:08.428Z",
        "line": 5,
        "name": "Sort Players by Descending Order of Goals",
        "description": "",
        "id": "sort-forwards-by-goals;sort-players-by-descending-order-of-goals",
        "after": [
          {
            "result": {
              "duration": 6137000,
              "status": "passed"
            },
            "match": {
              "location": "com.example.LeagueFantasy.step_definitions.CreateLeagueStepDefinitions.tearDown()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 4940000,
              "status": "passed"
            },
            "line": 6,
            "name": "there exists in the system players \"John Doe\" with 5 goals and \"Jane Smith\" with 4 goals",
            "match": {
              "arguments": [
                {
                  "val": "\"John Doe\"",
                  "offset": 35
                },
                {
                  "val": "5",
                  "offset": 51
                },
                {
                  "val": "\"Jane Smith\"",
                  "offset": 63
                },
                {
                  "val": "4",
                  "offset": 81
                }
              ],
              "location": "com.example.LeagueFantasy.step_definitions.QueryForwardsByGoalsStepDefinitions.GivenPlayerExists(java.lang.String,int,java.lang.String,int)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 8310000,
              "status": "passed"
            },
            "line": 7,
            "name": "I sort players by descending order of goals",
            "match": {
              "location": "com.example.LeagueFantasy.step_definitions.QueryForwardsByGoalsStepDefinitions.whenISortPlayersByDescendingGoals()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 4437000,
              "status": "passed"
            },
            "line": 8,
            "name": "I am shown a descending goals list that has \"John Doe\" ranked higher than \"Jane Smith\"",
            "match": {
              "arguments": [
                {
                  "val": "\"John Doe\"",
                  "offset": 44
                },
                {
                  "val": "\"Jane Smith\"",
                  "offset": 74
                }
              ],
              "location": "com.example.LeagueFantasy.step_definitions.QueryForwardsByGoalsStepDefinitions.thenIAmShownAListWithCorrectOrder(java.lang.String,java.lang.String)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "start_timestamp": "2024-03-23T17:38:08.473Z",
        "line": 10,
        "name": "Sort Players By Ascending Order of Goals",
        "description": "",
        "id": "sort-forwards-by-goals;sort-players-by-ascending-order-of-goals",
        "after": [
          {
            "result": {
              "duration": 6105000,
              "status": "passed"
            },
            "match": {
              "location": "com.example.LeagueFantasy.step_definitions.CreateLeagueStepDefinitions.tearDown()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 4879000,
              "status": "passed"
            },
            "line": 11,
            "name": "there exists in the system players \"John Doe\" with 5 goals and \"Jane Smith\" with 4 goals",
            "match": {
              "arguments": [
                {
                  "val": "\"John Doe\"",
                  "offset": 35
                },
                {
                  "val": "5",
                  "offset": 51
                },
                {
                  "val": "\"Jane Smith\"",
                  "offset": 63
                },
                {
                  "val": "4",
                  "offset": 81
                }
              ],
              "location": "com.example.LeagueFantasy.step_definitions.QueryForwardsByGoalsStepDefinitions.GivenPlayerExists(java.lang.String,int,java.lang.String,int)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 3646000,
              "status": "passed"
            },
            "line": 12,
            "name": "I sort players by ascending order of goals",
            "match": {
              "location": "com.example.LeagueFantasy.step_definitions.QueryForwardsByGoalsStepDefinitions.whenISortPlayersByAscendingGoals()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 385000,
              "status": "passed"
            },
            "line": 13,
            "name": "I am shown a ascending goals list that has \"Jane Smith\" ranked higher than \"John Doe\"",
            "match": {
              "arguments": [
                {
                  "val": "\"Jane Smith\"",
                  "offset": 43
                },
                {
                  "val": "\"John Doe\"",
                  "offset": 75
                }
              ],
              "location": "com.example.LeagueFantasy.step_definitions.QueryForwardsByGoalsStepDefinitions.thenIAmShownAListWithCorrectOrder2(java.lang.String,java.lang.String)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "start_timestamp": "2024-03-23T17:38:08.503Z",
        "line": 15,
        "name": "No players in the system",
        "description": "",
        "id": "sort-forwards-by-goals;no-players-in-the-system",
        "after": [
          {
            "result": {
              "duration": 6192000,
              "status": "passed"
            },
            "match": {
              "location": "com.example.LeagueFantasy.step_definitions.CreateLeagueStepDefinitions.tearDown()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 16675000,
              "status": "passed"
            },
            "line": 16,
            "name": "no player is in the system goals",
            "match": {
              "location": "com.example.LeagueFantasy.step_definitions.QueryForwardsByGoalsStepDefinitions.noPlayerIsInTheSystem()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1756000,
              "status": "passed"
            },
            "line": 17,
            "name": "I query by ascending order of goals",
            "match": {
              "location": "com.example.LeagueFantasy.step_definitions.QueryForwardsByGoalsStepDefinitions.iQueryByAscendingOrderOfGoals()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 169000,
              "status": "passed"
            },
            "line": 18,
            "name": "I am shown a prompt indicating no results for ascending goals were found",
            "match": {
              "location": "com.example.LeagueFantasy.step_definitions.QueryForwardsByGoalsStepDefinitions.iAmShownAPromptIndicatingNoResultsWereFound()"
            },
            "keyword": "Then "
          }
        ]
      }
    ],
    "name": "Sort forwards by goals",
    "description": "",
    "id": "sort-forwards-by-goals",
    "keyword": "Feature",
    "uri": "file:src/test/resources/query_forward_by_goals.feature",
    "tags": []
  },
  {
    "line": 1,
    "elements": [
      {
        "start_timestamp": "2024-03-23T17:38:08.545Z",
        "line": 3,
        "name": "Exact player name",
        "description": "",
        "id": "query-forward-by-name;exact-player-name",
        "after": [
          {
            "result": {
              "duration": 5569000,
              "status": "passed"
            },
            "match": {
              "location": "com.example.LeagueFantasy.step_definitions.CreateLeagueStepDefinitions.tearDown()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 2976000,
              "status": "passed"
            },
            "line": 4,
            "name": "that there is a player named \"Lionel Messi\" in the system",
            "match": {
              "arguments": [
                {
                  "val": "\"Lionel Messi\"",
                  "offset": 29
                }
              ],
              "location": "com.example.LeagueFantasy.step_definitions.QueryForwardsByNameStepDefinitions.givenPlayerExists(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 4316000,
              "status": "passed"
            },
            "line": 5,
            "name": "I query \"Lionel Messi\"",
            "match": {
              "arguments": [
                {
                  "val": "\"Lionel Messi\"",
                  "offset": 8
                }
              ],
              "location": "com.example.LeagueFantasy.step_definitions.QueryForwardsByNameStepDefinitions.whenIQuery(java.lang.String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 709000,
              "status": "passed"
            },
            "line": 6,
            "name": "I am shown a list of players that includes \"Lionel Messi\"",
            "match": {
              "arguments": [
                {
                  "val": "\"Lionel Messi\"",
                  "offset": 43
                }
              ],
              "location": "com.example.LeagueFantasy.step_definitions.QueryForwardsByNameStepDefinitions.thenListIncludesPlayer(java.lang.String)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "start_timestamp": "2024-03-23T17:38:08.577Z",
        "line": 8,
        "name": "Partial match",
        "description": "",
        "id": "query-forward-by-name;partial-match",
        "after": [
          {
            "result": {
              "duration": 4618000,
              "status": "passed"
            },
            "match": {
              "location": "com.example.LeagueFantasy.step_definitions.CreateLeagueStepDefinitions.tearDown()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 4242000,
              "status": "passed"
            },
            "line": 9,
            "name": "that there are players named \"Harry Kane\" and \"Harry Maguire\" in the system",
            "match": {
              "arguments": [
                {
                  "val": "\"Harry Kane\"",
                  "offset": 29
                },
                {
                  "val": "\"Harry Maguire\"",
                  "offset": 46
                }
              ],
              "location": "com.example.LeagueFantasy.step_definitions.QueryForwardsByNameStepDefinitions.givenPlayersExist(java.lang.String,java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 3267000,
              "status": "passed"
            },
            "line": 10,
            "name": "I query \"Harry\"",
            "match": {
              "arguments": [
                {
                  "val": "\"Harry\"",
                  "offset": 8
                }
              ],
              "location": "com.example.LeagueFantasy.step_definitions.QueryForwardsByNameStepDefinitions.whenIQuery(java.lang.String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 831000,
              "status": "passed"
            },
            "line": 11,
            "name": "I am shown a list of players that includes \"Harry Kane\" and \"Harry Maguire\"",
            "match": {
              "arguments": [
                {
                  "val": "\"Harry Kane\"",
                  "offset": 43
                },
                {
                  "val": "\"Harry Maguire\"",
                  "offset": 60
                }
              ],
              "location": "com.example.LeagueFantasy.step_definitions.QueryForwardsByNameStepDefinitions.thenListIncludesPlayers(java.lang.String,java.lang.String)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "start_timestamp": "2024-03-23T17:38:08.607Z",
        "line": 13,
        "name": "Player not found",
        "description": "",
        "id": "query-forward-by-name;player-not-found",
        "after": [
          {
            "result": {
              "duration": 4408000,
              "status": "passed"
            },
            "match": {
              "location": "com.example.LeagueFantasy.step_definitions.CreateLeagueStepDefinitions.tearDown()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 464000,
              "status": "passed"
            },
            "line": 14,
            "name": "that the list of players in the system does not include any player whose name contains \"Yassine Mimet\"",
            "match": {
              "arguments": [
                {
                  "val": "\"Yassine Mimet\"",
                  "offset": 87
                }
              ],
              "location": "com.example.LeagueFantasy.step_definitions.QueryForwardsByNameStepDefinitions.givenNoPlayerWithNameExists(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 3009000,
              "status": "passed"
            },
            "line": 15,
            "name": "I query \"Yassine Mimet\"",
            "match": {
              "arguments": [
                {
                  "val": "\"Yassine Mimet\"",
                  "offset": 8
                }
              ],
              "location": "com.example.LeagueFantasy.step_definitions.QueryForwardsByNameStepDefinitions.whenIQuery(java.lang.String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 103000,
              "status": "passed"
            },
            "line": 16,
            "name": "I am shown a prompt that indicates that no results were found",
            "match": {
              "location": "com.example.LeagueFantasy.step_definitions.QueryForwardsByNameStepDefinitions.thenNoResultsFoundPrompt()"
            },
            "keyword": "Then "
          }
        ]
      }
    ],
    "name": "Query forward by name",
    "description": "",
    "id": "query-forward-by-name",
    "keyword": "Feature",
    "uri": "file:src/test/resources/query_forward_by_name.feature",
    "tags": []
  },
  {
    "line": 2,
    "elements": [
      {
        "start_timestamp": "2024-03-23T17:38:08.631Z",
        "line": 5,
        "name": "Sort Players by Descending Order of Assists",
        "description": "",
        "id": "sort-forwards-by-assists;sort-players-by-descending-order-of-assists",
        "after": [
          {
            "result": {
              "duration": 4861000,
              "status": "passed"
            },
            "match": {
              "location": "com.example.LeagueFantasy.step_definitions.CreateLeagueStepDefinitions.tearDown()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 6059000,
              "status": "passed"
            },
            "line": 6,
            "name": "there exists in the system players \"John Doe\" with 5 assists and \"Jane Smith\" with 4 assists",
            "match": {
              "arguments": [
                {
                  "val": "\"John Doe\"",
                  "offset": 35
                },
                {
                  "val": "5",
                  "offset": 51
                },
                {
                  "val": "\"Jane Smith\"",
                  "offset": 65
                },
                {
                  "val": "4",
                  "offset": 83
                }
              ],
              "location": "com.example.LeagueFantasy.step_definitions.QueryForwardsByAssistsStepDefinitions.GivenPlayerExists(java.lang.String,int,java.lang.String,int)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 2670000,
              "status": "passed"
            },
            "line": 7,
            "name": "I sort players by descending order of assists",
            "match": {
              "location": "com.example.LeagueFantasy.step_definitions.QueryForwardsByAssistsStepDefinitions.whenISortPlayersByDescendingGoals()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 513000,
              "status": "passed"
            },
            "line": 8,
            "name": "I am shown a descending assists list that has \"John Doe\" ranked higher than \"Jane Smith\"",
            "match": {
              "arguments": [
                {
                  "val": "\"John Doe\"",
                  "offset": 46
                },
                {
                  "val": "\"Jane Smith\"",
                  "offset": 76
                }
              ],
              "location": "com.example.LeagueFantasy.step_definitions.QueryForwardsByAssistsStepDefinitions.thenIAmShownAListWithCorrectOrder3(java.lang.String,java.lang.String)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "start_timestamp": "2024-03-23T17:38:08.663Z",
        "line": 10,
        "name": "Sort Players by Ascending Order of Assists",
        "description": "",
        "id": "sort-forwards-by-assists;sort-players-by-ascending-order-of-assists",
        "after": [
          {
            "result": {
              "duration": 4677000,
              "status": "passed"
            },
            "match": {
              "location": "com.example.LeagueFantasy.step_definitions.CreateLeagueStepDefinitions.tearDown()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 5474000,
              "status": "passed"
            },
            "line": 11,
            "name": "there exists in the system players \"John Doe\" with 5 assists and \"Jane Smith\" with 4 assists",
            "match": {
              "arguments": [
                {
                  "val": "\"John Doe\"",
                  "offset": 35
                },
                {
                  "val": "5",
                  "offset": 51
                },
                {
                  "val": "\"Jane Smith\"",
                  "offset": 65
                },
                {
                  "val": "4",
                  "offset": 83
                }
              ],
              "location": "com.example.LeagueFantasy.step_definitions.QueryForwardsByAssistsStepDefinitions.GivenPlayerExists(java.lang.String,int,java.lang.String,int)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 3453000,
              "status": "passed"
            },
            "line": 12,
            "name": "I sort players by ascending order of assists",
            "match": {
              "location": "com.example.LeagueFantasy.step_definitions.QueryForwardsByAssistsStepDefinitions.whenISortPlayersByAscendingGoals()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 320000,
              "status": "passed"
            },
            "line": 13,
            "name": "I am shown a ascending assists list that has \"Jane Smith\" ranked higher than \"John Doe\"",
            "match": {
              "arguments": [
                {
                  "val": "\"Jane Smith\"",
                  "offset": 45
                },
                {
                  "val": "\"John Doe\"",
                  "offset": 77
                }
              ],
              "location": "com.example.LeagueFantasy.step_definitions.QueryForwardsByAssistsStepDefinitions.thenIAmShownAListWithCorrectOrder4(java.lang.String,java.lang.String)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "start_timestamp": "2024-03-23T17:38:08.693Z",
        "line": 15,
        "name": "No players in the system",
        "description": "",
        "id": "sort-forwards-by-assists;no-players-in-the-system",
        "after": [
          {
            "result": {
              "duration": 4611000,
              "status": "passed"
            },
            "match": {
              "location": "com.example.LeagueFantasy.step_definitions.CreateLeagueStepDefinitions.tearDown()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 177914000,
              "status": "passed"
            },
            "line": 16,
            "name": "no player is in the system assists",
            "match": {
              "location": "com.example.LeagueFantasy.step_definitions.QueryForwardsByAssistsStepDefinitions.noPlayerIsInTheSystem()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 2212000,
              "status": "passed"
            },
            "line": 17,
            "name": "I query by ascending order of assists",
            "match": {
              "location": "com.example.LeagueFantasy.step_definitions.QueryForwardsByAssistsStepDefinitions.iQueryByAscendingOrderOfGoals()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 121000,
              "status": "passed"
            },
            "line": 18,
            "name": "I am shown a prompt indicating no results for ascending assists were found",
            "match": {
              "location": "com.example.LeagueFantasy.step_definitions.QueryForwardsByAssistsStepDefinitions.iAmShownAPromptIndicatingNoResultsWereFound()"
            },
            "keyword": "Then "
          }
        ]
      }
    ],
    "name": "Sort forwards by assists",
    "description": "",
    "id": "sort-forwards-by-assists",
    "keyword": "Feature",
    "uri": "file:src/test/resources/query_forwards_by_assists.feature",
    "tags": []
  }
]