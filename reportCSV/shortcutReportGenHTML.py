from datetime import datetime, timedelta
import pandas as pd

"""
File to read the csv generated by shortcut to report the 
stories that have been updated in the last 7 days
and save the report as html
"""

def generate_html_report(csv_file_path, output_file_path):
    # Load the data
    data = pd.read_csv(csv_file_path)
    
    # Current date
    current_date = datetime.now()

    # Calculate the date 7 days ago from the current date
    date_7_days_ago = current_date - timedelta(days=7)

    # Convert 'updated_at' column to datetime format for comparison
    data['updated_at'] = pd.to_datetime(data['updated_at'], format='%Y/%m/%d %H:%M:%S')

    # Filter stories updated within the last 7 days
    recent_updates = data[data['updated_at'] >= date_7_days_ago]

    # States of interest
    states_of_interest = ['Met Definition of Done', 'In Progress', 'Sprint Backlog (Refined)']

    # Start HTML report
    html_report = "<html><head><title>Agile Stories Report</title></head><body>"
    html_report += "<h1>Agile Stories Report (Last 7 Days)</h1>"

    for state in states_of_interest:
        state_stories = recent_updates[recent_updates['state'] == state][['name', 'owners', 'tasks']]
        
        if not state_stories.empty:
            html_report += f"<h2>{state} Stories</h2>"
            html_report += "<ul>"
            for _, story in state_stories.iterrows():
                html_report += f"<li><strong>Name:</strong> {story['name']}<br>"
                html_report += f"<strong>Owner:</strong> {story['owners']}<br>"
                html_report += "<strong>Tasks:</strong><ul>"
                if pd.notnull(story['tasks']):
                    for task in story['tasks'].split(';'):
                        html_report += f"<li>{task}</li>"
                else:
                    html_report += "<li>No tasks specified</li>"
                html_report += "</ul></li>"
            html_report += "</ul>"

    html_report += "</body></html>"

    # Save the HTML report to a file
    with open(output_file_path, 'w') as file:
        file.write(html_report)

    print(f"Report saved to {output_file_path}")

file_name = '5LeagueReportFeb13'
csv_file_path = f'csv/{file_name}.csv'  # Update this path to your CSV file path
output_file_path = f'html/{file_name}.html'  # Update this path to where you want the HTML report saved
generate_html_report(csv_file_path, output_file_path)
